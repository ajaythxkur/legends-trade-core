import React from "react";

type IconProps = React.SVGProps<SVGSVGElement> & { className?: string };
export const PremarketSvg = ({ className = "", ...props }: IconProps) => (
  <svg width="19" height="18" viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg" className={className} {...props}>
    <path
      d="M10.0775 16.3637H5.95933C4.5284 16.3637 3.36842 15.2037 3.36842 13.7728V9.48302M8.33912 1.59033H12.3733C13.775 1.59033 14.9113 2.75032 14.9113 4.18124V8.47105M5.07617 7.50003C3.64534 7.50003 2.48501 6.34025 2.48486 4.90946C2.48486 3.47853 3.64526 2.31815 5.07617 2.31815C6.50697 2.31829 7.66675 3.47862 7.66675 4.90946C7.66661 6.34016 6.50688 7.49989 5.07617 7.50003ZM13.1912 15.6983C11.7604 15.6983 10.6001 14.5385 10.5999 13.1077C10.5999 11.6768 11.7603 10.5164 13.1912 10.5164C14.622 10.5165 15.7818 11.6769 15.7818 13.1077C15.7817 14.5384 14.6219 15.6981 13.1912 15.6983Z"
      stroke="currentColor"
      strokeWidth="1.56"
      strokeLinecap="round"
    />
  </svg>
);

export const LaunchpadSvg = ({ className = "", ...props }: IconProps) => (
  <svg width="19" height="18" viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg" className={className} {...props}>
    <path
      d="M5.64947 8.99997L10.0869 4.56255C11.7758 2.87364 13.7818 2.76958 14.6769 2.82231C14.8133 2.83109 14.9419 2.88924 15.0385 2.9859C15.1352 3.08257 15.1934 3.21113 15.2021 3.34755C15.2549 4.24262 15.1494 6.25005 13.4619 7.93755L9.02447 12.375M5.64947 8.99997L9.02447 12.375M5.64947 8.99997L2.75822 8.59637C2.65487 8.58159 2.55768 8.53833 2.47752 8.47145C2.39736 8.40456 2.33739 8.31669 2.30434 8.21766C2.27128 8.11863 2.26643 8.01236 2.29034 7.91073C2.31425 7.8091 2.36597 7.71614 2.43971 7.64223L4.85494 5.227C4.96035 5.12171 5.10322 5.06254 5.25221 5.06247H9.58697M9.02447 12.375L9.42807 15.2662C9.44285 15.3696 9.48611 15.4668 9.55299 15.5469C9.61988 15.6271 9.70775 15.687 9.80678 15.7201C9.90581 15.7532 10.0121 15.758 10.1137 15.7341C10.2153 15.7102 10.3083 15.6585 10.3822 15.5847L12.7974 13.1695C12.9027 13.0641 12.9619 12.9212 12.962 12.7722V8.43747M6.67322 13.2061C6.40111 13.803 5.48424 15.1875 2.83697 15.1875C2.83697 12.5402 4.22143 11.6233 4.81838 11.3512"
      stroke="#494D47"
      strokeWidth="1.2"
      strokeLinecap="round"
      strokeLinejoin="round" />
  </svg>
);

export const PointsSvg = ({ className = "", ...props }: IconProps) => (
  <svg width="19" height="18" viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg" className={className} {...props}>
    <path
      d="M13.7342 7.7775C14.4432 8.04182 15.0741 8.48065 15.5686 9.0534C16.063 9.62615 16.405 10.3143 16.5631 11.0543C16.7211 11.7943 16.6899 12.5621 16.4725 13.2869C16.2551 14.0116 15.8585 14.6699 15.3193 15.2007C14.7801 15.7316 14.1158 16.1179 13.3877 16.3239C12.6597 16.53 11.8914 16.5491 11.154 16.3796C10.4166 16.2101 9.73384 15.8573 9.16887 15.354C8.6039 14.8507 8.17497 14.213 7.92175 13.5M5.41675 4.5H6.16675V7.5M12.6992 10.41L13.2242 10.9425L11.1092 13.0575M10.6667 6C10.6667 8.48528 8.65203 10.5 6.16675 10.5C3.68147 10.5 1.66675 8.48528 1.66675 6C1.66675 3.51472 3.68147 1.5 6.16675 1.5C8.65203 1.5 10.6667 3.51472 10.6667 6Z"
      stroke="#494D47"
      strokeWidth="1.2"
      strokeLinecap="round"
      strokeLinejoin="round" />
  </svg>

);

export const DashboardSvg = ({ className = "", ...props }: IconProps) => (
  <svg width="19" height="18" viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg" className={className} {...props}>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M3.52677 1.19978L3.46638 1.19974C3.19224 1.19948 2.95592 1.19926 2.74657 1.24952C2.0884 1.40752 1.57452 1.92141 1.41651 2.57958C1.36625 2.78893 1.36647 3.02524 1.36674 3.29938L1.36677 3.35978V6.23978L1.36674 6.30018C1.36647 6.57432 1.36625 6.81064 1.41651 7.01998C1.57452 7.67815 2.0884 8.19204 2.74657 8.35005C2.95592 8.40031 3.19224 8.40008 3.46638 8.39982L3.52677 8.39978H6.40677L6.46717 8.39982C6.74131 8.40008 6.97764 8.40031 7.18698 8.35005C7.84514 8.19204 8.35903 7.67815 8.51704 7.01998C8.5673 6.81064 8.56707 6.57432 8.56681 6.30018L8.56677 6.23978V3.35978L8.56681 3.29938C8.56707 3.02524 8.5673 2.78893 8.51704 2.57958C8.35903 1.92141 7.84514 1.40752 7.18698 1.24952C6.97764 1.19926 6.74131 1.19948 6.46717 1.19974L6.40677 1.19978H3.52677ZM3.02671 2.41636C3.07836 2.40396 3.15744 2.39978 3.52677 2.39978H6.40677C6.77612 2.39978 6.8552 2.40396 6.90684 2.41636C7.12623 2.46903 7.29752 2.64032 7.3502 2.85972C7.3626 2.91136 7.36677 2.99044 7.36677 3.35978V6.23978C7.36677 6.60913 7.3626 6.68821 7.3502 6.73984C7.29752 6.95924 7.12623 7.13053 6.90684 7.18321C6.8552 7.1956 6.77612 7.19978 6.40677 7.19978H3.52677C3.15744 7.19978 3.07836 7.1956 3.02671 7.18321C2.80731 7.13053 2.63602 6.95924 2.58336 6.73984C2.57095 6.68821 2.56677 6.60913 2.56677 6.23978V3.35978C2.56677 2.99044 2.57095 2.91136 2.58336 2.85972C2.63602 2.64032 2.80731 2.46903 3.02671 2.41636ZM11.9268 1.19978L11.8664 1.19974C11.5922 1.19948 11.3559 1.19926 11.1466 1.24952C10.4884 1.40752 9.97451 1.92141 9.81651 2.57958C9.76624 2.78893 9.76647 3.02524 9.76674 3.29938L9.76677 3.35978V6.23978L9.76674 6.30018C9.76647 6.57432 9.76624 6.81064 9.81651 7.01998C9.97451 7.67815 10.4884 8.19204 11.1466 8.35005C11.3559 8.40031 11.5922 8.40008 11.8664 8.39982L11.9268 8.39978H14.8068L14.8671 8.39982C15.1413 8.40008 15.3776 8.40031 15.587 8.35005C16.2451 8.19204 16.7591 7.67815 16.9171 7.01998C16.9673 6.81064 16.9671 6.57432 16.9668 6.30018V6.23978V3.35978V3.29938C16.9671 3.02524 16.9673 2.78893 16.9171 2.57958C16.7591 1.92141 16.2451 1.40752 15.587 1.24952C15.3776 1.19926 15.1413 1.19948 14.8671 1.19974L14.8068 1.19978H11.9268ZM11.4267 2.41636C11.4784 2.40396 11.5574 2.39978 11.9268 2.39978H14.8068C15.1761 2.39978 15.2552 2.40396 15.3068 2.41636C15.5262 2.46903 15.6975 2.64032 15.7502 2.85972C15.7626 2.91136 15.7668 2.99044 15.7668 3.35978V6.23978C15.7668 6.60913 15.7626 6.68821 15.7502 6.73984C15.6975 6.95924 15.5262 7.13053 15.3068 7.18321C15.2552 7.1956 15.1761 7.19978 14.8068 7.19978H11.9268C11.5574 7.19978 11.4784 7.1956 11.4267 7.18321C11.2073 7.13053 11.036 6.95924 10.9834 6.73984C10.9709 6.68821 10.9668 6.60913 10.9668 6.23978V3.35978C10.9668 2.99044 10.9709 2.91136 10.9834 2.85972C11.036 2.64032 11.2073 2.46903 11.4267 2.41636ZM3.46638 9.59974L3.52677 9.59978H6.40677L6.46717 9.59974C6.74131 9.59948 6.97764 9.59925 7.18698 9.64952C7.84514 9.80752 8.35903 10.3214 8.51704 10.9796C8.5673 11.1889 8.56707 11.4252 8.56681 11.6994L8.56677 11.7598V14.6398L8.56681 14.7001C8.56707 14.9743 8.5673 15.2106 8.51704 15.42C8.35903 16.0781 7.84514 16.5921 7.18698 16.7501C6.97764 16.8003 6.74131 16.8001 6.46717 16.7998H6.40677H3.52677H3.46638C3.19224 16.8001 2.95592 16.8003 2.74657 16.7501C2.0884 16.5921 1.57452 16.0781 1.41651 15.42C1.36625 15.2106 1.36647 14.9743 1.36674 14.7001L1.36677 14.6398V11.7598L1.36674 11.6994C1.36647 11.4252 1.36625 11.1889 1.41651 10.9796C1.57452 10.3214 2.0884 9.80752 2.74657 9.64952C2.95592 9.59925 3.19224 9.59948 3.46638 9.59974ZM3.52677 10.7998C3.15744 10.7998 3.07836 10.804 3.02671 10.8164C2.80731 10.869 2.63602 11.0403 2.58336 11.2597C2.57095 11.3114 2.56677 11.3904 2.56677 11.7598V14.6398C2.56677 15.0091 2.57095 15.0882 2.58336 15.1398C2.63602 15.3592 2.80731 15.5305 3.02671 15.5832C3.07836 15.5956 3.15744 15.5998 3.52677 15.5998H6.40677C6.77612 15.5998 6.8552 15.5956 6.90684 15.5832C7.12623 15.5305 7.29752 15.3592 7.3502 15.1398C7.3626 15.0882 7.36677 15.0091 7.36677 14.6398V11.7598C7.36677 11.3904 7.3626 11.3114 7.3502 11.2597C7.29752 11.0403 7.12623 10.869 6.90684 10.8164C6.8552 10.804 6.77612 10.7998 6.40677 10.7998H3.52677ZM11.9268 9.59978L11.8664 9.59974C11.5922 9.59948 11.3559 9.59925 11.1466 9.64952C10.4884 9.80752 9.97451 10.3214 9.81651 10.9796C9.76624 11.1889 9.76647 11.4252 9.76674 11.6994L9.76677 11.7598V14.6398L9.76674 14.7001C9.76647 14.9743 9.76624 15.2106 9.81651 15.42C9.97451 16.0781 10.4884 16.5921 11.1466 16.7501C11.3559 16.8003 11.5922 16.8001 11.8664 16.7998H11.9268H14.8068H14.8671C15.1413 16.8001 15.3776 16.8003 15.587 16.7501C16.2451 16.5921 16.7591 16.0781 16.9171 15.42C16.9673 15.2106 16.9671 14.9743 16.9668 14.7001V14.6398V11.7598V11.6994C16.9671 11.4252 16.9673 11.1889 16.9171 10.9796C16.7591 10.3214 16.2451 9.80752 15.587 9.64952C15.3776 9.59925 15.1413 9.59948 14.8671 9.59974L14.8068 9.59978H11.9268ZM11.4267 10.8164C11.4784 10.804 11.5574 10.7998 11.9268 10.7998H14.8068C15.1761 10.7998 15.2552 10.804 15.3068 10.8164C15.5262 10.869 15.6975 11.0403 15.7502 11.2597C15.7626 11.3114 15.7668 11.3904 15.7668 11.7598V14.6398C15.7668 15.0091 15.7626 15.0882 15.7502 15.1398C15.6975 15.3592 15.5262 15.5305 15.3068 15.5832C15.2552 15.5956 15.1761 15.5998 14.8068 15.5998H11.9268C11.5574 15.5998 11.4784 15.5956 11.4267 15.5832C11.2073 15.5305 11.036 15.3592 10.9834 15.1398C10.9709 15.0882 10.9668 15.0091 10.9668 14.6398V11.7598C10.9668 11.3904 10.9709 11.3114 10.9834 11.2597C11.036 11.0403 11.2073 10.869 11.4267 10.8164Z"
      fill="currentColor"
    />
  </svg>
);

export const RewardsSvg = ({ className = "", ...props }: IconProps) => (
  <svg width="19" height="18" viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg" className={className} {...props}>
    <path d="M8.99679 3.38845H9.04823M9.04823 3.38845H12.0175C12.5506 3.38845 13.0543 3.63256 13.3847 4.05096L15.5474 6.7902C15.8415 7.16272 15.8264 7.69248 15.5114 8.04756L9.75377 14.539C9.36375 14.9787 8.67703 14.9785 8.28728 14.5385L2.53624 8.04633C2.22187 7.69144 2.20668 7.16239 2.50016 6.79005L4.6609 4.0488C4.99161 3.62922 5.49658 3.38461 6.03082 3.38519L9.04823 3.38845Z" stroke="#494D47" strokeWidth="1.2" />
    <path d="M6.95605 11.1268C7.11527 10.4899 7.43371 8.89776 8.22979 8.89776C8.86666 8.89776 8.86666 9.85306 9.50353 9.85306C10.2996 9.85306 10.9365 8.26089 11.0957 7.62402" stroke="#494D47" strokeWidth="0.85" strokeLinecap="round" strokeLinejoin="round" />
    <path d="M10.9894 4.82031V5.39929M11.2783 5.10962H10.6993M6.91797 7.12844V7.41793M7.06097 7.27309H6.77148M8.96543 6.84923C8.95251 6.79914 8.9264 6.75342 8.88982 6.71684C8.85324 6.68026 8.80753 6.65415 8.75743 6.64123L7.86942 6.41225C7.85427 6.40795 7.84094 6.39882 7.83144 6.38626C7.82195 6.37369 7.81681 6.35837 7.81681 6.34262C7.81681 6.32687 7.82195 6.31156 7.83144 6.29899C7.84094 6.28643 7.85427 6.2773 7.86942 6.273L8.75743 6.04387C8.80751 6.03096 8.85321 6.00487 8.88979 5.96832C8.92637 5.93177 8.95249 5.88608 8.96543 5.83602L9.19442 4.94801C9.19867 4.9328 9.20779 4.9194 9.22037 4.90985C9.23296 4.90031 9.24832 4.89514 9.26411 4.89514C9.27991 4.89514 9.29527 4.90031 9.30785 4.90985C9.32044 4.9194 9.32955 4.9328 9.33381 4.94801L9.56265 5.83602C9.57557 5.88611 9.60168 5.93182 9.63826 5.9684C9.67484 6.00498 9.72056 6.03109 9.77065 6.04402L10.6587 6.27286C10.6739 6.27707 10.6874 6.28617 10.697 6.29878C10.7066 6.31138 10.7118 6.32678 10.7118 6.34262C10.7118 6.35846 10.7066 6.37387 10.697 6.38647C10.6874 6.39907 10.6739 6.40818 10.6587 6.41239L9.77065 6.64123C9.72056 6.65415 9.67484 6.68026 9.63826 6.71684C9.60168 6.75342 9.57557 6.79914 9.56265 6.84923L9.33366 7.73724C9.32941 7.75245 9.32029 7.76585 9.30771 7.7754C9.29512 7.78494 9.27976 7.79011 9.26397 7.79011C9.24817 7.79011 9.23281 7.78494 9.22023 7.7754C9.20765 7.76585 9.19853 7.75245 9.19427 7.73724L8.96543 6.84923Z" stroke="#494D47" strokeWidth="0.65" strokeLinecap="round" strokeLinejoin="round" />
  </svg>

);


// Optional: dynamic usage
// const icons = {
//   coins: PremarketSvg,
//   wallet: LaunchpadSvg,
// };

// export type IconName = keyof typeof icons;

// export const Icon = ({
//   name,
//   className = "",
//   ...props
// }: { name: IconName } & IconProps) => {
//   const Component = icons[name];
//   return Component ? <Component className={className} {...props} /> : null;
// };
